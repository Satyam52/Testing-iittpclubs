{"version":3,"sources":["Components/Navigation/Navigation.js","Components/Card/Card.js","App.js","serviceWorker.js","index.js"],"names":["Component","data","Card","map","index","key","className","src","Button","variant","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"ycAMgCA,Y,mEC0C1BC,G,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IA4CdC,EA3CF,WACX,OACE,6BACGD,EAAKE,KAAI,SAACF,EAAMG,GAAP,OACR,yBAAKC,IAAKD,EAAOE,UAAU,wBACzB,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,+BACf,yBACEA,UAAU,2BACVC,IAAI,4EAEN,yBAAKD,UAAU,uDACb,0BAAMA,UAAU,oBAAhB,kCAGA,0BAAMA,UAAU,oBAAhB,8CAGA,uBAAGA,UAAU,0BAAb,yRAKkC,KAElC,yBAAKA,UAAU,4BACb,4DACA,gEAEF,yBAAKA,UAAU,4BACb,kBAACE,EAAA,EAAD,CAAQC,QAAQ,UAAUH,UAAU,kBACjC,IADH,qBC/DDI,MATf,WACE,OACE,oCAEE,kBAAC,EAAD,QCCcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a2106df2.chunk.js","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\nimport React, { Component } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Navigation.css';\n\nexport class Navigation extends Component {\n  render() {\n    return (\n      <div className=\"nav-container\">\n        <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" sticky=\"bottom\">\n          <Navbar.Brand className=\"main-web-name\" href=\"#home\">\n            Tech Hub IIT Tirupati\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <Nav.Link className=\"navigation-link\" href=\"#home\">\n                Home\n              </Nav.Link>\n              <Nav.Link className=\"navigation-link\" href=\"#about\">\n                About\n              </Nav.Link>\n              <Nav.Link className=\"navigation-link\" href=\"#clubs\">\n                Clubs\n              </Nav.Link>\n              <Nav.Link className=\"navigation-link\" href=\"#achievements\">\n                Achievements\n              </Nav.Link>\n              <Nav.Link className=\"navigation-link\" href=\"#ongoing-projets\">\n                Ongoing Projects\n              </Nav.Link>\n              <Nav.Link className=\"navigation-link\" href=\"#challenges\">\n                Challenges\n              </Nav.Link>\n              <Nav.Link className=\"navigation-link\" href=\"#faqs\">\n                FAQs\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","// import React from \"react\";\r\n\r\n// const Card = () => {\r\n//   return (\r\n//     <>\r\n//       <div className=\"card-card-container\">\r\n//         <div className=\"card-card-visiblity\">\r\n//           <div className=\"card-card-background\">\r\n//             <div className=\"card-card-content\">\r\n//               <span className=\"card-card-title\">\r\n//                 Techmanics Club - NSS Activity\r\n//               </span>\r\n//               <span className=\"card-card-topic\">\r\n//                 Topic:Teaching Robotics to School Children\r\n//               </span>\r\n//               <p className=\"card-card-description\">\r\n//                 Have you ever wondered “How to coordinate between multiple\r\n//                 drones? How to simulate a manipulator or a robot? ate a\r\n//                 manipulator or a How does a robot map the environment and\r\n//                 navigate in it?” Answer to each and every question is ROS(Robot\r\n//                 Operating System)! ...Read more\r\n//               </p>\r\n//               <div className=\"card-card-date-location\">\r\n//                 <span>Tuesday, 2nd December 2021</span>\r\n//                 <span>TC1, Transit Campus - 8:00 pm</span>\r\n//               </div>\r\n//               <div className=\"card-card-btn-container\">\r\n//                 <Button variant=\"outline\" className=\"card-card-btn\">\r\n//                   {\" \"}\r\n//                   Register\r\n//                 </Button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       {/* <div className=\"card-card-container2\">\r\n//         <div className=\"card-card-background\"></div>\r\n//       </div> */}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Card;\r\nimport React from \"react\";\r\nimport \"./Card.css\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst data = [1, 2, 3, 4, 5, 6];\r\nconst Card = () => {\r\n  return (\r\n    <div>\r\n      {data.map((data, index) => (\r\n        <div key={index} className=\"event-card-container\">\r\n          <div className=\"event-card-content\">\r\n            <div className=\"event-card-content-overlay\"></div>\r\n            <img\r\n              className=\"event-card-content-image\"\r\n              src=\"https://www.nyit.edu/files/degrees/Degree_CoECS_DataScienceMS_Thumb.jpg\"\r\n            />\r\n            <div className=\"event-card-content-details event-card-fadeIn-bottom\">\r\n              <span className=\"event-card-title\">\r\n                Techmanics Club - NSS Activity\r\n              </span>\r\n              <span className=\"event-card-topic\">\r\n                Topic:Teaching Robotics to School Children\r\n              </span>\r\n              <p className=\"event-card-description\">\r\n                Have you ever wondered “How to coordinate between multiple\r\n                drones? How to simulate a manipulator or a robot? ate a\r\n                manipulator or a How does a robot map the environment and\r\n                navigate in it?” Answer to each and every question is ROS(Robot\r\n                Operating System)! ...Read more{\" \"}\r\n              </p>\r\n              <div className=\"event-card-date-location\">\r\n                <span>Tuesday, 2nd December 2021</span>\r\n                <span>TC1, Transit Campus - 8:00 pm</span>\r\n              </div>\r\n              <div className=\"event-card-btn-container\">\r\n                <Button variant=\"outline\" className=\"event-card-btn\">\r\n                  {\" \"}\r\n                  Register\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"swiper/css/swiper.css\";\nimport { Navigation } from \"./Components/Navigation/Navigation\";\nimport HomePage from \"./Components/HomePage/HomePage\";\nimport Card from \"./Components/Card/Card\";\n\nfunction App() {\n  return (\n    <>\n      {/* <HomePage /> */}\n      <Card />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}